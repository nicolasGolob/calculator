{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearButton.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","number","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","addInput","value","setState","state","handleEqual","math","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAOaA,EAAS,SAACC,GAAD,OACpB,qBACEC,UAAS,uBANaC,EAOHF,EAAMG,SANnBC,MAAMF,IAAsB,MAAXA,GAA6B,MAAXA,EAMG,WAAP,OAErCG,QAAS,kBAAIL,EAAMM,YAAYN,EAAMG,WAJvC,SAMGH,EAAMG,WAXc,IAACD,GCAbK,G,MAAQ,SAACP,GAClB,OAAO,qBAAKC,UAAU,aAAf,SAA6BD,EAAMQ,UCDjCC,G,MAAc,SAACT,GACxB,OACI,qBAAKC,UAAU,eAAeI,QAASL,EAAMU,YAA7C,SACKV,EAAMG,a,QCuDJQ,E,kDArDb,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IAKRY,SAAW,SAACC,GACV,EAAKC,SAAS,CAACN,MAAM,EAAKO,MAAMP,MAAQK,KAPxB,EAUlBG,YAAc,WACb,EAAKF,SAAS,CAACN,MAAMS,IAAc,EAAKF,MAAMP,UAT7C,EAAKO,MAAS,CACZP,MAAQ,IAHM,E,0CAclB,WAAS,IAAD,OACN,OAEE,sBAAKP,UAAU,iBAAf,UACE,oBAAIA,UAAU,QAAd,wBACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CAAOO,MAAOU,KAAKH,MAAMP,QACzB,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAaY,KAAKN,SAA1B,eACA,cAAC,EAAD,CAAQN,YAAa,kBAAI,EAAKU,eAA9B,eACA,cAAC,EAAD,CAAQV,YAAaY,KAAKN,SAA1B,kBAEF,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAaS,YAAa,kBAAI,EAAKI,SAAS,CAACN,MAAO,OAApD,+B,GA/CMW,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.704591c0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Button.css\";\n\nconst isArithmOperator = (number) => {\n  return !isNaN(number) || number === '=' || number === '.';\n};\n\nexport const Button = (props) => (\n  <div\n    className={`button-form ${\n      isArithmOperator(props.children) ? null : \"operator\"\n    }`}\n    onClick={()=>props.handleClick(props.children)}\n    >\n    {props.children}\n  </div>\n);\n\n","import React from 'react'\nimport '../styles/Input.css'\n\nexport const Input = (props) =>{\n    return(<div className=\"input-calc\">{props.input}</div>)\n}","import React from 'react'\nimport '../styles/ClearButton.css'\n\nexport const ClearButton = (props)=>{\n    return(\n        <div className=\"clear-button\" onClick={props.handleClear}>\n            {props.children}\n        </div>\n    ) \n}","import React, { Component } from 'react';\nimport './styles/App.css';\nimport {Button} from './components/Button';\nimport {Input} from './components/Input';\nimport {ClearButton} from './components/ClearButton';\nimport * as math from \"mathjs\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state  = {\n      input : \"\"\n    };\n  }\n  addInput = (value) =>{\n    this.setState({input:this.state.input + value});\n  };\n\n  handleEqual = ()=>{\n   this.setState({input:math.evaluate(this.state.input)})\n  };\n\n  render(){ \n    return(\n\n      <div className=\"container-calc\">\n        <h1 className=\"title\">Calculator</h1>\n        <div className=\"calculator-form\">\n          <Input input={this.state.input}></Input>\n          <div className=\"row\">\n            <Button handleClick={this.addInput}>7</Button>\n            <Button handleClick={this.addInput}>8</Button>\n            <Button handleClick={this.addInput}>9</Button>\n            <Button handleClick={this.addInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addInput}>4</Button>\n            <Button handleClick={this.addInput}>5</Button>\n            <Button handleClick={this.addInput}>6</Button>\n            <Button handleClick={this.addInput}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addInput}>1</Button>\n            <Button handleClick={this.addInput}>2</Button>\n            <Button handleClick={this.addInput}>3</Button>\n            <Button handleClick={this.addInput}>-</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addInput}>.</Button>\n            <Button handleClick={this.addInput}>0</Button>\n            <Button handleClick={()=>this.handleEqual()}>=</Button>\n            <Button handleClick={this.addInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={()=>this.setState({input: \" \"})}>Reset</ClearButton>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}